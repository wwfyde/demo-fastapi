"""migrate models

Revision ID: 3a4ac93dcb05
Revises: 
Create Date: 2024-10-29 16:59:35.014905

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3a4ac93dcb05'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False, comment='课程ID'),
    sa.Column('name', sa.String(length=64), nullable=False, comment='课程名称'),
    sa.PrimaryKeyConstraint('id'),
    comment='课程表'
    )
    op.create_index(op.f('ix_course_id'), 'course', ['id'], unique=False)
    op.create_table('llm',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False, comment='模型名称'),
    sa.Column('description', sa.String(length=1024), nullable=True, comment='详细说明'),
    sa.Column('provider', sa.String(length=32), nullable=True, comment='供应商, 渠道名称'),
    sa.Column('base_url', sa.String(length=512), nullable=True, comment='基础URL'),
    sa.Column('api_key', sa.String(length=128), nullable=True, comment='API Key'),
    sa.Column('access_key', sa.String(length=128), nullable=True, comment='Access Key for AWS bedrock'),
    sa.Column('secret_key', sa.String(length=128), nullable=True, comment='Secret Key for AWS bedrock'),
    sa.Column('model', sa.String(length=64), nullable=True, comment='默认模型'),
    sa.Column('model_extra', sa.JSON(), nullable=True, comment='模型列表'),
    sa.Column('config', sa.JSON(), nullable=True, comment='配置列表'),
    sa.Column('status', sa.Boolean(), nullable=True, comment='渠道状态'),
    sa.Column('is_deleted', sa.Boolean(), nullable=True, comment='是否删除'),
    sa.Column('expire_at', sa.DateTime(), nullable=True, comment='过期时间'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_name'), 'llm', ['name'], unique=True)
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False, comment='学生ID'),
    sa.Column('name', sa.String(length=64), nullable=False, comment='学生姓名'),
    sa.Column('age', sa.Integer(), nullable=False, comment='学生年龄'),
    sa.PrimaryKeyConstraint('id'),
    comment='学生表'
    )
    op.create_index(op.f('ix_student_id'), 'student', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('hashed_password', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('association',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('extra_data', sa.String(length=50), nullable=True, comment='额外数据'),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'course_id')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('description2', sa.String(length=1024), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_title'), 'items', ['title'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_items_title'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_table('items')
    op.drop_table('association')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_student_id'), table_name='student')
    op.drop_table('student')
    op.drop_index(op.f('ix_llm_name'), table_name='llm')
    op.drop_table('llm')
    op.drop_index(op.f('ix_course_id'), table_name='course')
    op.drop_table('course')
    # ### end Alembic commands ###

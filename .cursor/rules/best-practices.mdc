---
description: 
globs: 
alwaysApply: false
---
# FastAPI项目最佳实践

## 代码风格

- 使用Python类型注解
- 遵循PEP 8命名约定
- 使用Ruff进行代码格式化和检查

## API设计

- 使用依赖注入模式管理依赖项
- 使用Pydantic模型进行数据验证
- API版本化（v1, v2等）
- 使用合适的HTTP方法和状态码

## 错误处理

- 使用自定义异常处理器处理错误
- 返回一致的错误响应格式
- 日志记录异常以便调试

## 异步编程

- 利用FastAPI的异步支持
- 使用异步数据库连接
- 避免在异步上下文中使用阻塞操作

## 测试

- 使用PyTest和pytest-asyncio进行测试
- 为API端点编写集成测试
- 使用依赖注入模式简化测试

## 安全性

- 使用JWT进行身份验证
- 实施基于角色的访问控制
- 防止常见的安全漏洞（如SQL注入、XSS等）
